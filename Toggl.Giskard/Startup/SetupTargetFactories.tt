<#@ template language="C#" hostspecific="True"
#><#@ assembly name="System.Core"
#><#@ import namespace="System.IO"
#><#@ import namespace="System.Linq"
#>using Android.Views;
using MvvmCross.Binding.Bindings.Target.Construction;
using Toggl.Giskard.Bindings;
using Toggl.Giskard.Views;
using Android.Widget;
using Android.Support.Design.Widget;

namespace Toggl.Giskard
{
    public partial class Setup
    {
        protected override void FillTargetFactories(IMvxTargetBindingFactoryRegistry registry)
        {
            base.FillTargetFactories(registry);
<#

    foreach(var side in new [] { "Left", "Top", "Right", "Bottom" })
    {
        WriteLine( "            registry.RegisterCustomBindingFactory<View>(");
        WriteLine($"                $\"{side}{{ViewMarginTargetBinding.BindingName}}\",");
        WriteLine($"                view => new ViewMarginTargetBinding(view, ViewMarginTargetBinding.BoundMargin.{side})");
        WriteLine( "            );");
    }

    var filePath = Path.GetDirectoryName(Host.TemplateFile);
    var targetBindingFolder = Path.Combine(filePath, "../Bindings/" );
    var files = Directory.GetFiles(targetBindingFolder, "*.cs");
    var isFirstClass = true;

    foreach(var file in files)
    {  
        var className = Path.GetFileName(file).Replace(".cs", ""); 
        var lines = File.ReadAllLines(file);

        var declarationLine = lines.FirstOrDefault(line => line.Contains("TargetBinding<"));
        if (declarationLine == null) continue;

        var beginAt = declarationLine.IndexOf("<") + 1;
        var length = declarationLine.IndexOf(", ", beginAt) - beginAt;

        if(length < 0)
            length = declarationLine.IndexOf(">", beginAt) - beginAt;

        var viewName = declarationLine.Substring(beginAt, length);

        var bindingLine = lines.FirstOrDefault(line => line.Contains("const string BindingName"));
        if (bindingLine == null) continue;

        var bindingName = bindingLine
            .Split(' ')
            .Last()
            .Replace(@"""", "")
            .Replace(@";", "");

        WriteLine("");
        WriteLine($"            registry.RegisterCustomBindingFactory<{viewName}>(");
        WriteLine($"                {className}.BindingName,");
        WriteLine($"                view => new {className}(view)");
        WriteLine($"            );");
    }
#>        }
    }
}
